#!/bin/bash -eu


source $OPENSHIFT_CARTRIDGE_SDK_BASH
pid_file="${OPENSHIFT_JULIA_DIR}julia.pid"


function catchall() {
  return 0
}


function start() {
  if is_running; then
    echo "application $OPENSHIFT_APP_NAME is already running"
    exit 1
  fi
  cd $OPENSHIFT_REPO_DIR
  echo "Starting $OPENSHIFT_APP_NAME"
  nohup julia server.jl >/dev/null 2>&1 &
  npid=$(ps -eo pid,command | grep "server.jl" | grep -v grep | awk '{print $1}')
  echo "$npid" > "$pid_file"
  echo "started $OPENSHIFT_APP_NAME"
}


function stop() {
  echo "stopping $OPENSHIFT_APP_NAME application"
  if [ -f $pid_file ]; then
    npid=$(cat $pid_file 2> /dev/null)
    if [ -n "$npid" ]; then
      echo "stopping $OPENSHIFT_APP_NAME"
      kill "$npid" 2> /dev/null
    fi
  else
    npid=$(ps -eo pid,command | grep "server.jl" | grep -v grep | awk '{print $1}')
    if [ -n "$npid" ]; then
      echo "stopping $OPENSHIFT_APP_NAME"
      kill "$npid" 2> /dev/null
    fi
  fi
  echo "$OPENSHIFT_APP_NAME application stopped"
  rm -f $pid_file
}


function restart() {
  stop
  start
}


function is_running() {
  if [ -f $pid_file ]; then
    npid=$(cat $pid_file 2> /dev/null)
    if [ `ps --no-heading --pid $npid | wc -l` -gt 0 ] ; then
      return 0
    fi
  fi
  return 1
}


function status() {
  if is_running; then
      echo "$OPENSHIFT_APP_NAME running"
      return 0
  fi
  echo "$OPENSHIFT_APP_NAME not-running"
  return 1
}


case "$1" in
  start)                start ;;
  stop)                 stop ;;
  restart)              restart ;;
  status)               status ;;
  reload)               catchall ;;
  tidy)                 catchall ;;
  pre-build)            catchall ;;
  build)                catchall ;;
  deploy)               catchall ;;
  post-deploy)          catchall ;;
  pre-snapshot)         catchall ;;
  post-snapshot)        catchall ;;
  pre-restore)          catchall ;;
  post-restore)         catchall ;;
  pre-repo-archive)     catchall ;;
  update-configuration) catchall ;;
  *)           exit 0
esac

exit 0
